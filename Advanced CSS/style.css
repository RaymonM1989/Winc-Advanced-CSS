/* (Basic) Reset of pre-set margins and padding */
* {
  margin: 0;
  padding: 0;
}

/* Import other SCSS files */
/* Mixin for controling font behaviour. The properties are multiplied by unitized values, to ensure the correct units. */
/* I know the assignment said nothing about making the testimonial responsive, but I tried my best to achieve it anyhow. Therefore, my code might be a bit clunkier than you're used to. */
.testimonial-container {
  margin: 15px auto;
}

.testimonial-container .testimonial {
  background-color: white;
  /* Center the testimonial in the middle of the screen */
  margin: 0px auto;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* Set the size of the testimonial te responsive (by using 'vw' as indicator for the width and height. This will ensure the aspect ratio (Sadly this doesn't work on fonts and most other things, like box-shadow, yet)) */
  width: 75vw;
  height: 100vw;
  /* Limit the function of the 'vw' scaling (so the testimonial doesn't become too small or too big) */
  min-width: 390px;
  max-width: 650px;
  min-height: 510px;
  max-height: 850px;
  border-radius: 4%;
  overflow: hidden;
  -webkit-box-shadow: 0px 10px 15px grey;
          box-shadow: 0px 10px 15px grey;
}

.testimonial-container .testimonial p {
  /* Make the size of the textbox reactive, while keeping the aspect-ratio */
  padding: 8% 8%;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  height: 66%;
  background-color: white;
  /* Font specifics. Font size is handled in the mediaqueries */
  font-family: "Helvetica", "Tahoma", "Trebuchet MS", "Verdana", "Arial", sans-serif;
  text-align: left;
  color: #5a5a5a;
}

.testimonial-container .testimonial footer {
  height: 34%;
  background-color: #686de0;
  text-align: center;
}

.testimonial-container .testimonial footer img {
  /* Make Avatar image size and position responsive */
  width: 33%;
  position: relative;
  top: -40%;
  border-radius: 100%;
  /* Sadly, this border is either a constant (so not responsive) or grows (and shrinks) after the actual image stops scaling, since there's no 'min' or 'max' attribute */
  border: 1vw solid white;
}

.testimonial-container .testimonial footer h1 {
  position: relative;
  top: -32%;
  /* Font specifics. Font size is handled in the mediaqueries */
  font-family: "Helvetica", "Tahoma", "Trebuchet MS", "Verdana", "Arial", sans-serif;
  color: white;
  /* Given that (should this become an actual testimonial) people would probably type their name with just a capital letter (in the form that handles testimonials), this function makes it all Caps, for consistency */
  text-transform: uppercase;
}

.testimonial-container .testimonial footer h2 {
  position: relative;
  top: -25%;
  /* Font specifics. Font size is handled in the mediaqueries */
  font-family: "Helvetica", "Tahoma", "Trebuchet MS", "Verdana", "Arial", sans-serif;
  color: #adafe9;
}

.portfolio-container {
  margin: 100px 50px;
  /* Grid is created here, Column layout is handled in the mediaqueries */
  display: -ms-grid;
  display: grid;
}

.portfolio-container .portfolio-item {
  background-color: #222c3d;
  margin: 15px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  border-radius: 6%;
  overflow: hidden;
  /* Position is set to relative, so '.portfolio-button' (child) can be centered with 'position: absolute' */
  position: relative;
  /* When hovering over the portfolio-item: scale the image while lowering the opacity */
  /* When hovering over the portfolio-item: Make the button visible by increasing the opacity */
}

.portfolio-container .portfolio-item:hover .portfolio-image {
  -webkit-transform: scaleX(1.1) scaleY(1.1);
          transform: scaleX(1.1) scaleY(1.1);
  opacity: 0;
}

.portfolio-container .portfolio-item:hover .portfolio-button {
  opacity: 1;
}

.portfolio-container .portfolio-image {
  width: 100%;
  height: 100%;
  -webkit-transition-property: opacity, -webkit-transform;
  transition-property: opacity, -webkit-transform;
  transition-property: opacity, transform;
  transition-property: opacity, transform, -webkit-transform;
  -webkit-transition-duration: 250ms;
          transition-duration: 250ms;
}

.portfolio-container .portfolio-button {
  width: 30%;
  height: 10%;
  /* Place button in the middle of the portfolio-item */
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  /* Hide button on load */
  opacity: 0;
  -webkit-transition-property: opacity;
  transition-property: opacity;
  -webkit-transition-duration: 250ms;
          transition-duration: 250ms;
}

.socialmedia-container {
  width: 260px;
  /* Create a grid with 1 column and 5 rows */
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 260px;
      grid-template-columns: 260px;
  -ms-grid-rows: 50px 50px 50px 50px 50px;
      grid-template-rows: 50px 50px 50px 50px 50px;
  /* Anchor the container to the bottom-right of the screen; The part with the links is offscreen. */
  position: fixed;
  right: -200px;
  bottom: 50px;
}

.socialmedia-container .socialmedia-button {
  /* Create a grid (in each grid cell from the container) with once cell for the icon and one for the link */
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 60px 200px;
      grid-template-columns: 60px 200px;
  place-items: center;
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
  -webkit-transition-duration: 400ms;
          transition-duration: 400ms;
  /* When hovering over a socialmedia-button it moves to the left (so the whole button is onscreen, and the link is accessible) */
  /* Set the size of the icons and invert them from black to white images */
}

.socialmedia-container .socialmedia-button:hover {
  -webkit-transform: translateX(-200px);
          transform: translateX(-200px);
}

.socialmedia-container .socialmedia-button .socialmedia-icon {
  width: 30px;
  height: 30px;
  -webkit-filter: invert(1);
          filter: invert(1);
}

.socialmedia-container .socialmedia-button:first-child {
  background-color: #e17b77;
}

.socialmedia-container .socialmedia-button:nth-child(2) {
  background-color: #00aced;
}

.socialmedia-container .socialmedia-button:nth-child(3) {
  background-color: #007bb6;
}

.socialmedia-container .socialmedia-button:nth-child(4) {
  background-color: #3b5998;
}

.socialmedia-container .socialmedia-button:last-child {
  background-color: #333;
}

.socialmedia-container .socialmedia-button .socialmedia-link {
  color: white;
  font-size: 16px;
  font-family: "Helvetica", "Tahoma", "Trebuchet MS", "Verdana", "Arial", sans-serif;
  font-weight: bold;
  /* Keep the color from changing to blue after the link has been clicked */
}

.socialmedia-container .socialmedia-button .socialmedia-link:visited {
  color: white;
}

/* Mobile */
@media (max-width: 768px) {
  p {
    font-size: 20px;
    line-height: 1.75em;
    letter-spacing: 0em;
  }
  h1 {
    font-size: 30px;
    line-height: 1em;
    letter-spacing: 0.1em;
  }
  h2 {
    font-size: 20px;
    line-height: 1em;
    letter-spacing: 0.05em;
  }
  .portfolio-container {
    -ms-grid-columns: (1fr)[1];
        grid-template-columns: repeat(1, 1fr);
  }
}

/* Inbetween Mobile & Tablet (Because the text would get relly small just before reaching the 768px-mark) */
@media (min-width: 600px) {
  p {
    font-size: 24px;
    line-height: 1.75em;
    letter-spacing: 0em;
  }
  h1 {
    font-size: 32px;
    line-height: 1em;
    letter-spacing: 0.1em;
  }
  h2 {
    font-size: 24px;
    line-height: 1em;
    letter-spacing: 0.05em;
  }
  .portfolio-container {
    -ms-grid-columns: (1fr)[2];
        grid-template-columns: repeat(2, 1fr);
  }
}

/* Tablet */
@media (min-width: 768px) {
  p {
    font-size: 30px;
    line-height: 1.75em;
    letter-spacing: 0em;
  }
  h1 {
    font-size: 34px;
    line-height: 1em;
    letter-spacing: 0.1em;
  }
  h2 {
    font-size: 30px;
    line-height: 1em;
    letter-spacing: 0.05em;
  }
  .portfolio-container {
    -ms-grid-columns: (1fr)[2];
        grid-template-columns: repeat(2, 1fr);
  }
}

/* Desktop */
@media (min-width: 1280px) {
  p {
    font-size: 34px;
    line-height: 1.75em;
    letter-spacing: 0em;
  }
  h1 {
    font-size: 34px;
    line-height: 1em;
    letter-spacing: 0.1em;
  }
  h2 {
    font-size: 30px;
    line-height: 1em;
    letter-spacing: 0.05em;
  }
  .portfolio-container {
    -ms-grid-columns: (1fr)[3];
        grid-template-columns: repeat(3, 1fr);
  }
}

body {
  background-color: #c3cfe2;
}
/*# sourceMappingURL=style.css.map */